name: Build & Push Core images

on:
  push:
    branches:
      - "master"
    paths:
      - "scripts/**"
      - "dockerfiles/Dockerfile_r-ver_*"
      - "dockerfiles/Dockerfile_rstudio_*"
      - "dockerfiles/Dockerfile_tidyverse_*"
      - "dockerfiles/Dockerfile_verse_*"
  workflow_run:
    workflows:
      - "Create new release"
    branches:
      - "master"
    types:
      - completed
  workflow_dispatch:

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-json
        run: |
          JSON=build/matrix/latest.json
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            JSON=build/matrix/non_latest.json
          fi
          echo ::set-output name=json::${JSON}
          echo ${JSON}
      - id: set-matrix
        run: |
          CONTENT=$(jq -r 'tostring' ${{ steps.set-json.outputs.json }})
          echo ::set-output name=matrix::${CONTENT}
          echo ${CONTENT}

  build:
    needs: generate_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate_matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build the tagged Docker image
        run: |
          docker-compose -f compose/${{ matrix.r_version }}.yml build
      - name: Push the tagged Docker image
        run: |
          docker-compose -f compose/${{ matrix.r_version }}.yml push
      - name: Push ml multi-tagged image
        run: |
          docker image tag rocker/cuda:${{ matrix.r_version }} rocker/cuda:${{ matrix.r_version }}-cuda10.1
          docker image tag rocker/cuda:${{ matrix.r_version }} rocker/r-ver:${{ matrix.r_version }}-cuda10.1
          docker image tag rocker/ml:${{ matrix.r_version }} rocker/ml:${{ matrix.r_version }}-cuda10.1
          docker image tag rocker/ml-verse:${{ matrix.r_version }} rocker/ml-verse:${{ matrix.r_version }}-cuda10.1
          docker image push rocker/cuda:${{ matrix.r_version }}-cuda10.1
          docker image push rocker/r-ver:${{ matrix.r_version }}-cuda10.1
          docker image push rocker/ml:${{ matrix.r_version }}-cuda10.1
          docker image push rocker/ml-verse:${{ matrix.r_version }}-cuda10.1
      - name: Push latest tagged Docker image
        if: matrix.r_latest == true
        run: |
          docker image tag rocker/r-ver:${{ matrix.r_version }} rocker/r-ver:latest
          docker image tag rocker/rstudio:${{ matrix.r_version }} rocker/rstudio:latest
          docker image tag rocker/tidyverse:${{ matrix.r_version }} rocker/tidyverse:latest
          docker image tag rocker/verse:${{ matrix.r_version }} rocker/verse:latest
          docker image tag rocker/shiny:${{ matrix.r_version }} rocker/shiny:latest
          docker image tag rocker/shiny-verse:${{ matrix.r_version }} rocker/shiny-verse:latest
          docker image tag rocker/geospatial:${{ matrix.r_version }} rocker/geospatial:latest
          docker image tag rocker/binder:${{ matrix.r_version }} rocker/binder:latest
          docker image tag rocker/cuda:${{ matrix.r_version }} rocker/cuda:latest
          docker image tag rocker/ml:${{ matrix.r_version }} rocker/ml:latest
          docker image tag rocker/ml-verse:${{ matrix.r_version }} rocker/ml-verse:latest
          docker image push rocker/r-ver:latest
          docker image push rocker/rstudio:latest
          docker image push rocker/tidyverse:latest
          docker image push rocker/verse:latest
          docker image push rocker/shiny:latest
          docker image push rocker/shiny-verse:latest
          docker image push rocker/geospatial:latest
          docker image push rocker/binder:latest
          docker image push rocker/cuda:latest
          docker image push rocker/ml:latest
          docker image push rocker/ml-verse:latest
      - name: Inspect built image
        run: |
          IMAGELIST_NAME=${{ matrix.r_version }}.tsv make inspect-image-all
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tmp
          path: tmp

  publish_reports:
    if: always()
    needs: build
    runs-on: ubuntu-latest
    container:
      image: rocker/tidyverse:latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Checkout wiki
        uses: actions/checkout@v2
        with:
          repository: "${{ github.repository }}.wiki"
          path: reports
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: tmp
          path: tmp
      - name: Generate reports and update wiki home
        run: |
          make report-all
          make wiki-home
      - name: Update wiki
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated update
          repository: reports
